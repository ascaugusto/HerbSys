// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace HerbSys.BDD.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CadastraCliente")]
    public partial class CadastraClienteFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "sffSalvarCliente.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CadastraCliente", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cadastro com dados validos")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("\'0990263018\'", "\'Augusto Santos Coelho\'", "\'Rua Dr Dido Fontes\'", "\'29060280\'", "\'Jardim da Penha\'", "\'Vitoria\'", "\'ES\'", "\'(27)997015055\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'31850435000159\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        public virtual void CadastroComDadosValidos(string cpf_Cnpj, string nome, string endereco, string cep, string bairro, string cidade, string uf, string telefone, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastro com dados validos", @__tags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("Eu estou na tela de cadastro de cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And(string.Format("eu informei {0}", cpf_Cnpj), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And(string.Format("eu informei {0}", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And(string.Format("eu informei {0}", endereco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And(string.Format("eu informei {0}", cep), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("eu informei {0}", bairro), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("eu informei {0}", cidade), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And(string.Format("eu informei {0}", uf), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And(string.Format("eu informei {0}", telefone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.When("Eu finalizei o cadastro do cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("o cadastro deve ser realizado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cadastro com dados invalidos")]
        [NUnit.Framework.TestCaseAttribute("", "\'Augusto Santos Coelho\'", "\'Rua Dr Dido Fontes\'", "\'29060280\'", "\'Jardim da Penha\'", "\'Vitoria\'", "\'ES\'", "\'(27)997015055\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'1\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'12\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'123\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'1234\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'12345\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'123456\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'1234567\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'12345678\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'123456789\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'1234567899\'", "\'Churrasquinho de Gato\'", "\'Avenidas das Prima\'", "\'29060010\'", "\'Centro\'", "\'Caraiva\'", "\'BA\'", "\'(73)33606669\'", null)]
        public virtual void CadastroComDadosInvalidos(string cpf_Cnpj, string nome, string endereco, string cep, string bairro, string cidade, string uf, string telefone, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastro com dados invalidos", exampleTags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("Eu estou na tela de cadastro de cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And(string.Format("eu informei {0}", cpf_Cnpj), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("eu informei {0}", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And(string.Format("eu informei {0}", endereco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And(string.Format("eu informei {0}", cep), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And(string.Format("eu informei {0}", bairro), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And(string.Format("eu informei {0}", cidade), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And(string.Format("eu informei {0}", uf), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("eu informei {0}", telefone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("Eu finalizei o cadastro do cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("o cadastro deve ser bloquado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
